@inject HttpClient Http
@using Entities
<h3>Album</h3>
@if (album == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Usuario</th>
                <th>Id</th>
                <th>Titulo</th>

            </tr>
        </thead>
        <tbody>

            <tr>
                <td>@album.userId.ToString()</td>
                <td>@album.id.ToString()</td>
                <td>@album.title</td>

            </tr>

        </tbody>
    </table>
}
@if (album == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">

        <tbody>
            <tr>
                @{ var count = 0;}
                @foreach (var photo in photos)
                {

                    count++;
                    <td><img src="@photo.thumbnailUrl" /><input type="button" value="Comment" @onclick="@(async () => await LoadComments(photo.id))" /></td>
                    @if ((count % 3) == 0)
                    {
                    @:</tr>
                    @:<tr>


                    }

                }
            </tr>
            <tr>
                <td>Comentarios</td>
                <td>@commentsText</td>
            </tr>
        </tbody>

    </table>

}




@code {
    [Parameter]
    public int IdAlbum { get; set; }


    private string commentsText = String.Empty;
    private List<Album> albums;
    private Album album;
    private List<Photo> photos;
    private List<Comment> comments;
    protected override async Task OnInitializedAsync()
    {
        albums = await Http.GetFromJsonAsync<List<Album>>("https://jsonplaceholder.typicode.com/albums");
        photos = await Http.GetFromJsonAsync<List<Photo>>("https://jsonplaceholder.typicode.com/photos");

        album = albums.Where(x => x.id == IdAlbum).First();
        photos = photos.Where(x => x.albumId == IdAlbum).ToList();
    }
    async Task LoadComments(int id)
    {
        commentsText = String.Empty;
        comments = await Http.GetFromJsonAsync<List<Comment>>("https://jsonplaceholder.typicode.com/comments");
        comments = comments.Where(x => x.postId == id).ToList();
        foreach (var comment in comments)
        {
            commentsText = String.Concat(commentsText, comment.body.ToString(), "\n\n\n");

        }

    }

}